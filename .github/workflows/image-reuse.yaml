name: Publish and Sign Container Image
on:
  workflow_call:
    inputs:
      image_tags:
        required: true
        type: string
      go-version:
        required: true
        type: string
      platforms:
        required: true
        type: string
      push:
        required: true
        type: boolean
        default: false
    secrets:
      quay_username:
        required: true
      quay_password:
        required: true
      ghcr_username:
        required: false
      ghcr_password:
        required: false

    outputs:
      image-digest:
        description: "sha256 digest of container image"
        value: ${{ jobs.publish.outputs.image-digest }}

permissions:
  contents: read

jobs:
  publish:
    permissions:
      packages: write # Used to push images to `ghcr.io` if used.
      id-token: write # Needed to create an OIDC token for keyless signing
    runs-on: ubuntu-22.04
    outputs:
      image-digest: ${{ steps.image.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Golang
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: ${{ inputs.go-version }}

      - name: Install cosign
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b # v2.8.1
        with:
          cosign-release: 'v1.13.1'

      - uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.1.0
      - uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.2.1

      - name: Login to Quay.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: quay.io
          username: ${{ secrets.quay_username }}
          password: ${{ secrets.quay_password }}
        if: contains( inputs.image_tags, 'quay' ) && inputs.push == 'true'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.ghcr_username }}
          password: ${{ secrets.ghcr_password }}
        if: contains( inputs.image_tags, 'ghrc' ) && inputs.push == 'true'

      - name: Build and push container images
        id: image
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 #v3.2.0
        with:
          context: .
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push }}
          tags: ${{ inputs.image_tags }}
 
      - name: Sign container images on Quay
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign \
            -a "repo=${{ github.repository }}" \
            -a "workflow=${{ github.workflow }}" \
            -a "sha=${{ github.sha }}" \
            -a "run_id=${{ github.run_id }}" \
            -a "run_attempt=${{ github.run_attempt }}" \
            quay.io/34fathombelow/argocd@${{ steps.image.outputs.digest }}
        if: contains( inputs.image_tags, 'quay' ) && inputs.push == 'true'

      - name: Sign container images on GHCR
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign \
            -a "repo=${{ github.repository }}" \
            -a "workflow=${{ github.workflow }}" \
            -a "sha=${{ github.sha }}" \
            -a "run_id=${{ github.run_id }}" \
            -a "run_attempt=${{ github.run_attempt }}" \
            ghcr.io/34fathombelow/argocd@${{ steps.image.outputs.digest }}
        if: contains( inputs.image_tags, 'ghcr' ) && inputs.push == 'true'
